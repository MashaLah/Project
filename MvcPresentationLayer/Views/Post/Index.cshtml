@model MvcPresentationLayer.Models.PageInfo

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Index</h2>
<div>
    @ViewBag.TopicTitle
</div>

<div>
    @ViewBag.TopicDescription
</div>
<div id="indicator" style="display:none">
    Wait...
</div>
<div id="posts">
    @{Html.RenderAction("GetPosts"); }
</div>

@using (Ajax.BeginForm("GetPosts", new AjaxOptions { UpdateTargetId = "posts" ,OnSuccess= "processData" }))
{
    <input type="hidden" name="topicId" value="@ViewBag.topicId" />
    <div class="btn-group">
        @Html.PageLinks(Model)
    </div>
}

@*@if (Request.RequestContext.HttpContext.User.Identity.IsAuthenticated)
    {
        using (Ajax.BeginForm("Create",null, new AjaxOptions { UpdateTargetId = "posts" },new {@class="col-md-12" }))
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal center-block col-md-10">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.TopicId)
                <div class="form-group">
                    @Html.LabelFor(model => model.Text, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextAreaFor(model => model.Text,5,150, new { @class = "form-control", style = "width: 100%; max-width: 100%;" })
                        @Html.ValidationMessageFor(model => model.Text, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-4 col-md-12">
                        <input type="submit" value="Create" class="btn btn-default" />
                    </div>
                </div>
            </div>
        }
    }*@

@section scripts
    {
    <script>
        $('.list-group-item')
            .filter(':even:not(.list-group-item-danger)')
            .css("background-color", "#f7f9fa");

    /*    $(document).ready(function ()
        {
            $(".btn-group").click(function (e)
            {
                e.preventDefault();
                $("#indicator").show();
                var target = $("#posts");
                target.empty();

            })
        })*/

        function processData(data) {
            /*var target = $("#posts");
            target.empty();
            for (var i = 0; i < data.Count(); i++) {
                var post = data[i];
                target.append("<tr><td>" + post.Text + "</td><td>"
                    + post.UserId + "</td><td>" + post.TopicId
                    + "</td></tr>");
            }*/
            //alert(data);
            /*$.each(data, function (key, val) {
                $('#countries').append('<option value="' + val + '">' + key + '</option>');
            });*/
            $("#posts").empty();
            $('#posts').append('<ul class="list-group table-striped"></ul>');
            for (var i = 0; i < data.length; i++)
            {
                var post = data[i];
                // alert(post.Text);
                $('#posts>ul').append('<li class="list-group-item">' + ' <div class="container-fluid">' +
                    '<div class="row">' + '<div class="col-md-2">' + '<div class="row">'+'<small>'+@Html.DisplayFor(m => m.PageNumber)+'</small>'
                +'</div> <div class="row">'+'<small>'+post.User.Profile.Login+'</small>'
                + '<div class="row"> <div class="img-responsive"> <img width="75" height="75" src="~/Content/AvatarImage/2112715.png" alt="Avatar image" />'
                + ' </div> </div> </div> </div> <div class="col-md-10"> '
                +'<div class="row"> <div style="word-wrap:break-word;">'+ post.Text + '</div>'
                +'</div> </div></div> </div></li>');
            }
            $('.list-group-item')
            .filter(':even:not(.list-group-item-danger)')
            .css("background-color", "#f7f9fa");

        }

    </script>

}
